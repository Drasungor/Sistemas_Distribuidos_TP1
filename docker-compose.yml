
version: '3'
services:
  rabbitmq:
    build:
      context: ./
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      # test: rabbitmq-diagnostics check_running
      interval: 30s
      timeout: 30s
      retries: 3

  accepter:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./server/accepter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    expose:
      - "8080"
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      - likes_filter_0
      - trending_days_filter_0

  countries_amount_filter_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/countries_amount_filter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      - thumbnails_downloader_0

  duplication_filter_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/duplication_filter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      rabbitmq:
        condition: service_healthy

  funny_filter_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/funny_filter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      - duplication_filter_0

  likes_filter_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/likes_filter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      # rabbitmq:
      #   condition: service_healthy
      - funny_filter_0
      - views_sum_0

  max_views_day:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./server/max_views_day/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      rabbitmq:
        condition: service_healthy

  thumbnails_downloader_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/thumbnails_downloader/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      rabbitmq:
        condition: service_healthy

  trending_days_filter_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/trending_days_filter/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      - countries_amount_filter_0

  views_sum_0:
    build: ./server
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ID=0
    volumes:
      - ./server/views_sum/main.py:/app/main.py
      - ./server/MOM/MOM.py:/app/MOM.py
      - ./server/config.json:/config/config.json
    entrypoint: "python main.py"
    working_dir: /app
    depends_on:
      - max_views_day


  # funny_filter_1:
  #   build: ./server
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - NODE_ID=1
  #   volumes:
  #     - ./server/funny_filter/main.py:/app/main.py
  #     - ./server/MOM/MOM.py:/app/MOM.py
  #     - ./server/config.json:/config/config.json
  #   expose:
  #     - "8080"
  #   entrypoint: "python main.py"
  #   working_dir: /app
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy

  client:
    image: python
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./client:/app
    command: python /app/main.py
    working_dir: /app
    depends_on:
      - accepter
